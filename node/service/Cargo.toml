[package]
name = "acala-service"
version = "2.2.1"
authors = ["Acala Developers"]
edition = "2021"

[dependencies]
log = "0.4.8"
async-trait = { version = "0.1.48" }
hex-literal = "0.3.1"
serde = { version = "1.0.124", features = ["derive"] }
serde_json = "1.0.68"
futures = "0.3.15"
hex = "0.4.0"
ethers = "0.6.2"
codec = { package = "parity-scale-codec", version = "2.3.1" }

jsonrpc-core = "18.0.0"

node-executor = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-api = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-consensus = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-consensus-aura = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-consensus-aura = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-offchain = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-core = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-finality-grandpa = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-runtime = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-inherents = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-finality-grandpa = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-chain-spec = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-client-api = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-telemetry = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-service = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-executor = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-consensus = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-consensus-manual-seal = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-consensus-slots = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-transaction-pool = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-basic-authorship = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-network = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-cli = { git = "https://github.com/paritytech/substrate", branch = "master" }
sc-rpc = { git = "https://github.com/paritytech/substrate", branch = "master" }
frame-benchmarking = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-trie = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-timestamp = { git = "https://github.com/paritytech/substrate", branch = "master" }
substrate-prometheus-endpoint = { git = "https://github.com/paritytech/substrate", branch = "master"}
sc-tracing = { git = "https://github.com/paritytech/substrate", branch = "master" }

sp-block-builder = { git = "https://github.com/paritytech/substrate", branch = "master" }
frame-system-rpc-runtime-api = { git = "https://github.com/paritytech/substrate", branch = "master" }
pallet-transaction-payment-rpc-runtime-api = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-offchain = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-session = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-storage = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-transaction-pool = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-blockchain = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-std = { git = "https://github.com/paritytech/substrate", branch = "master" }
sp-keystore = { git = "https://github.com/paritytech/substrate", branch = "master" }

cumulus-client-network = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-client-service = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-client-consensus-aura = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-client-consensus-common = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-client-consensus-relay-chain = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-primitives-core = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-primitives-parachain-inherent = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-test-relay-sproof-builder = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-pallet-parachain-system = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-relay-chain-interface = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-relay-chain-local = { git = "https://github.com/paritytech/cumulus", branch = "master" }

polkadot-primitives = { git = "https://github.com/paritytech/polkadot", branch = "master" }
polkadot-service = { git = "https://github.com/paritytech/polkadot", branch = "master" }

ecosystem-renvm-bridge = { path = "../../ecosystem-modules/ren/renvm-bridge" }
module-collator-selection = { path = "../../modules/collator-selection" }
module-evm = { path = "../../modules/evm" }
module-nft = { path = "../../modules/nft" }
orml-oracle-rpc = { path = "../../orml/oracle/rpc" }
acala-primitives = { path = "../../primitives" }
acala-rpc = { path = "../../rpc" }
module-evm-rpc-runtime-api = { path = "../../modules/evm/rpc/runtime_api" }

runtime-common = { path = "../../runtime/common" }
mandala-runtime = { path = "../../runtime/mandala", optional = true }
karura-runtime = { path = "../../runtime/karura", optional = true }
acala-runtime = { path = "../../runtime/acala", optional = true }

[features]
default = [ "std" ]
std = []
runtime-benchmarks = [
	"mandala-runtime/runtime-benchmarks",
	"karura-runtime/runtime-benchmarks",
	"acala-runtime/runtime-benchmarks",
	"polkadot-service/runtime-benchmarks",
]
try-runtime = [
	"mandala-runtime/try-runtime",
	"karura-runtime/try-runtime",
	"acala-runtime/try-runtime",
	"polkadot-service/try-runtime",
]
with-mandala-runtime = [
	"mandala-runtime",
]
with-karura-runtime = [
	"karura-runtime",
]
with-acala-runtime = [
	"acala-runtime",
]
with-all-runtime = [
	"with-mandala-runtime",
	"with-karura-runtime",
	"with-acala-runtime",
]
